plugins {
    id 'java-library'
    id "io.freefair.lombok" version "6.0.0-m2"
    id "io.qameta.allure" version "2.9.6"
}

repositories {
    mavenCentral()
}

def
        restAssured = "4.4.0",
        junitVersion = "5.8.2",
        selenideVersion = "6.3.4",
        slf4jVersion = "1.7.32",
        allureVersion = "2.17.3"



dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "io.rest-assured:rest-assured:$restAssured",
            "io.rest-assured:json-schema-validator:$restAssured",
            "org.assertj:assertj-core:3.22.0",
            "com.fasterxml.jackson.core:jackson-databind:2.13.2.2",
            "com.google.code.gson:gson:2.9.0",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testRuntimeOnly(
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
    )

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
//            events "started", "failed"
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }

}